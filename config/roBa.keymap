/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
};


#define BASE 0
#define NAVI 1
#define NUMB 2
#define FUNC 3
#define SCRL 4
#define MOUS 5
#define SYST 6

#define MOD_MORPH(NAME, NORMAL, MODDED, MODS) \
  mm_##NAME: NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    #binding-cells = <0>; \
    bindings = <&kp NORMAL>, <&kp MODDED>; \
    mods = <MODS>; \
  };

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&sk {
    release-after-ms = <750>;
};

&lt {
    tapping-term-ms = <150>;
    flavor = "tap-preferred";
};

&trackball {
    automouse-layer = <MOUS>;
    scroll-layers = <SCRL>;
};

/ {
    combos {
        #include "combos.overlay"
    };

    auto_mouse: auto_mouse {
        compatible = "zmk,input-processor-temp-layer";
        #input-processor-cells = <2>;
        require-prior-idle-ms = <250>;
        excluded-positions = <18 19 20>;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAVI NUMB>;
            then-layer = <SYST>;
        };
    };

    behaviors {
        scr: scroll_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&mo>, <&kp>;
            display-name = "Scoll Layer";
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <500>;
            quick-release;
            ignore-modifiers;
        };
        hml: homerow_modsl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <175>;
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 42>;
            hold-trigger-on-release;
        };
        hmr: homerow_modsr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36>;
            hold-trigger-on-release;
        };
        sft_caps: shift_capsword {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&skq LSHIFT>, <&caps_word>;
        };

        #include "mod_morph.overlay"

        hmr_c: homerowmod_commasemi {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_csemi>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36>;
            hold-trigger-on-release;
        };
        hmr_d: homerowmod_dotcolon {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_dcoln>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36>;
            hold-trigger-on-release;
        };
        swap_next: swap_next {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            timeout-ms = <1500>;
        };
        swap_prev: swap_prev {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp LS(TAB)>, <&kt LALT>;
            timeout-ms = <1500>;
        };
        num_fun: num_function {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NUMB>, <&mo FUNC>;
        };
        blconfirm: bootloader_confirmation {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&none>, <&bootloader>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

/*
        layer_template {
            bindings = <
&trans        &trans        &trans        &trans        &trans                                            &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans                                                  &trans        
            >;
        };
*/

        base_layer {
            bindings = <
&kp Q         &kp W         &kp F         &kp P         &kp B                                             &kp J         &kp L         &scr SCRL U   &kp Y         &kp SQT
&kp A         &kp R         &kp S         &kp T         &kp G         &none               &none           &kp M         &kp N         &kp E         &kp I         &kp O
&hml LGUI Z   &hml LALT X   &hml LCTL C   &hml LSHFT D  &kp V         &none               &none           &kp K         &hmr RSHFT H  &hmr_c RCTL 0 &hmr_d RALT 0 &hmr RGUI FSLH
&mkp MB3      &mkp MB2      &mkp MB1      &kp BSPC      &sft_caps     &num_fun            &mo NAVI        &kp SPACE                                               &kp ENTER
            >;
        };

        navi_layer {
            bindings = <
&kp INS       &kp HOME      &kp UP        &kp END       &kp PG_UP                                         &kp K_APP     &swap_next    &swap_prev    &none         &blconfirm
&kp LC(A)     &kp LEFT      &kp DOWN      &kp RIGHT     &kp PG_DN     &trans              &trans          &kp C_VOL_UP  &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_STOP
&kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(Y)     &trans              &trans          &kp C_VOL_DN  &kp RSHIFT    &kp RCTRL     &kp RALT      &kp RGUI
&trans        &trans        &trans        &kp DEL       &trans        &trans              &trans          &trans                                                  &trans        
            >;
        };

        numb_layer {
            bindings = <
&blconfirm    &none         &none         &none         &none                                             &kp EQUAL     &kp N7        &kp N8        &kp N9        &kp DOT
&none         &none         &none         &none         &none         &trans              &trans          &kp PLUS      &kp N4        &kp N5        &kp N6        &kp ASTRK
&kp LGUI      &kp LALT      &kp LCTL      &kp LSHFT     &none         &trans              &trans          &kp MINUS     &kp N1        &kp N2        &kp N3        &kp FSLH
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &kp N0                                                  &trans        
            >;
        };

        func_layer {
            bindings = <
&blconfirm    &none         &none         &none         &none                                             &none         &kp F7        &kp F8        &kp F9        &kp F12
&none         &none         &none         &none         &none         &trans              &trans          &none         &kp F4        &kp F5        &kp F6        &kp F11
&kp LGUI      &kp LALT      &kp LCTL      &kp LSHFT     &none         &trans              &trans          &none         &kp F1        &kp F2        &kp F3        &kp F10
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans                                                  &trans        
            >;
        };

        scrl_layer {
            bindings = <
&trans        &trans        &trans        &trans        &trans                                            &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans                                                  &trans        
            >;
        };

        mous_layer {
            bindings = <
&trans        &trans        &trans        &trans        &trans                                            &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans        &mkp MB1      &mkp MB3      &mkp MB2      &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans        &trans        &trans        &trans        &trans        
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans                                                  &trans        
            >;
        };

        syst_layer {
            bindings = <
&bootloader   &none         &none         &none         &none                                             &none         &none         &none         &none         &bootloader
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none         &trans              &trans          &none         &bt BT_CLR    &none         &none         &none
&bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &none         &trans              &trans          &none         &none         &none         &none         &none
&trans        &trans        &trans        &trans        &trans        &trans              &trans          &trans                                                  &trans        
            >;
        };
    };
};
